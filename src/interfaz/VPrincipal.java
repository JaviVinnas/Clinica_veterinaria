package interfaz;

public class VPrincipal extends javax.swing.JFrame {

    aplicacion.FachadaAplicacion fa;
    // Copia de los valores
    String copiaDNI;
    String copiaNombre;
    Integer copiaIndiceSala;

    public VPrincipal(aplicacion.FachadaAplicacion fa) {
        this.fa = fa;
        initComponents();

        this.setLocationRelativeTo(null);
        etiquetaAdministrar.setEnabled(false);
        copiaDNI = "";
        copiaNombre = "";
        copiaIndiceSala = 0;
        
        rdClinica.setSelected(true);
        rdAction();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdClinica = new javax.swing.JRadioButton();
        rdPaciente = new javax.swing.JRadioButton();
        etiquetaDNI = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        etiquetaNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        etiquetaSala = new javax.swing.JLabel();
        boxSala = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCitas = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        btnAnadirCita = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        etiquetaAdministrar = new javax.swing.JMenu();
        menuClinica = new javax.swing.JMenu();
        itemTrabajadores = new javax.swing.JMenuItem();
        itemSalas = new javax.swing.JMenuItem();
        menuPacientes = new javax.swing.JMenu();
        itemAnimales = new javax.swing.JMenuItem();
        itemPropietarios = new javax.swing.JMenuItem();
        menuDatos = new javax.swing.JMenu();
        itemEspecies = new javax.swing.JMenuItem();
        itemEnfermedades = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("vPrincipal"); // NOI18N
        setResizable(false);

        rdClinica.setText("Por veterinario/sala");
        rdClinica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdClinicaActionPerformed(evt);
            }
        });

        rdPaciente.setText("Por paciente");
        rdPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdPacienteActionPerformed(evt);
            }
        });

        etiquetaDNI.setText("DNI");

        txtDNI.setToolTipText("");

        etiquetaNombre.setText("Nombre");

        etiquetaSala.setText("Sala");

        boxSala.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tablaCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Fecha", "Hora", "Trabajador", "Sala", "Propietario", "Animal"
            }
        ));
        tablaCitas.setMinimumSize(new java.awt.Dimension(90, 65));
        jScrollPane1.setViewportView(tablaCitas);

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnAnadirCita.setText("Añadir cita");
        btnAnadirCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirCitaActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        etiquetaAdministrar.setText("Administrar:");
        etiquetaAdministrar.setBorderPainted(false);
        etiquetaAdministrar.setFocusable(false);
        etiquetaAdministrar.setRequestFocusEnabled(false);
        jMenuBar1.add(etiquetaAdministrar);

        menuClinica.setText("Clínica");
        menuClinica.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuClinica.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        itemTrabajadores.setText("Trabajadores");
        itemTrabajadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTrabajadoresActionPerformed(evt);
            }
        });
        menuClinica.add(itemTrabajadores);

        itemSalas.setText("Salas");
        itemSalas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalasActionPerformed(evt);
            }
        });
        menuClinica.add(itemSalas);

        jMenuBar1.add(menuClinica);

        menuPacientes.setText("Pacientes");

        itemAnimales.setText("Animales");
        itemAnimales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAnimalesActionPerformed(evt);
            }
        });
        menuPacientes.add(itemAnimales);

        itemPropietarios.setText("Propietarios");
        itemPropietarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPropietariosActionPerformed(evt);
            }
        });
        menuPacientes.add(itemPropietarios);

        jMenuBar1.add(menuPacientes);

        menuDatos.setText("Datos");

        itemEspecies.setText("Especies");
        itemEspecies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEspeciesActionPerformed(evt);
            }
        });
        menuDatos.add(itemEspecies);

        itemEnfermedades.setText("Enfermedades");
        itemEnfermedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEnfermedadesActionPerformed(evt);
            }
        });
        menuDatos.add(itemEnfermedades);

        jMenuBar1.add(menuDatos);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAnadirCita)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSalir)))
                        .addGap(0, 31, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(etiquetaDNI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdClinica)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(etiquetaNombre)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(etiquetaSala)
                                .addGap(12, 12, 12))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(rdPaciente)
                                .addGap(21, 21, 21)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBuscar)
                            .addComponent(boxSala, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdClinica)
                    .addComponent(rdPaciente)
                    .addComponent(btnBuscar))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaDNI)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaSala)
                    .addComponent(boxSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnadirCita)
                    .addComponent(btnModificar)
                    .addComponent(btnSalir))
                .addGap(20, 20, 20))
        );

        getAccessibleContext().setAccessibleName("Biblioteca Informática");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemTrabajadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTrabajadoresActionPerformed
        fa.muestraExcepcion("La implementación de esta función no le incumbe a este grupo.");
    }//GEN-LAST:event_itemTrabajadoresActionPerformed

    private void itemSalasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemSalasActionPerformed

    private void itemAnimalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAnimalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemAnimalesActionPerformed

    private void itemPropietariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPropietariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemPropietariosActionPerformed

    private void itemEspeciesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEspeciesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemEspeciesActionPerformed

    private void itemEnfermedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEnfermedadesActionPerformed
        fa.muestraExcepcion("La implementación de esta función no le incumbe a este grupo.");
    }//GEN-LAST:event_itemEnfermedadesActionPerformed
    
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        fa.muestraExcepcion("La implementación de esta función no le incumbe a este grupo.");
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnAnadirCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirCitaActionPerformed
        fa.muestraExcepcion("La implementación de esta función no le incumbe a este grupo.");
    }//GEN-LAST:event_btnAnadirCitaActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void rdAction() {
        // Guardado temporal de los datos que aparecían en el otro RadioButton
        String DNI = txtDNI.getText();
        String Nombre = txtNombre.getText();
        if (rdClinica.isSelected()) {
        // Si el RadioButton de la Clinica está seleccionado
            // Se rellenan los campos con los valores de la copia:
            txtDNI.setText(copiaDNI);
            txtNombre.setText(copiaNombre);
            copiaIndiceSala = (copiaIndiceSala <= boxSala.getWidth()) ? copiaIndiceSala : boxSala.getWidth();
            // Se modifica la visibilidad o nombres de los elementos de búsqueda
            etiquetaNombre.setText("Animal");
            etiquetaSala.setVisible(true);
            boxSala.setVisible(true);
        } else {
        // Si el RadioButton del Paciente está seleccionado
            // Se rellenan los campos con los valores de la copia:
            txtDNI.setText(copiaDNI);
            txtNombre.setText(copiaNombre);
            // Se modifica la visibilidad o nombres de los elementos de búsqueda
            etiquetaNombre.setText("Nombre");
            etiquetaSala.setVisible(false);
            boxSala.setVisible(false);
        }
        // Guardado definitivo de los datos que aparecían en el otro RadioButton
        copiaDNI = DNI;
        copiaNombre = Nombre;
        copiaIndiceSala = boxSala.getSelectedIndex();
    }
    
    private void rdClinicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdClinicaActionPerformed
        // Solo puede haber un RadioButton activado a la vez, se alternan
        rdPaciente.setSelected(!rdClinica.isSelected());
        // Se realiza la accion
        rdAction();
    }//GEN-LAST:event_rdClinicaActionPerformed

    private void rdPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdPacienteActionPerformed
        // Solo puede haber un RadioButton activado a la vez, se alternan
        rdClinica.setSelected(!rdPaciente.isSelected());
        // Se realiza la accion
        rdAction();
    }//GEN-LAST:event_rdPacienteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox boxSala;
    private javax.swing.JButton btnAnadirCita;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JMenu etiquetaAdministrar;
    private javax.swing.JLabel etiquetaDNI;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaSala;
    private javax.swing.JMenuItem itemAnimales;
    private javax.swing.JMenuItem itemEnfermedades;
    private javax.swing.JMenuItem itemEspecies;
    private javax.swing.JMenuItem itemPropietarios;
    private javax.swing.JMenuItem itemSalas;
    private javax.swing.JMenuItem itemTrabajadores;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuClinica;
    private javax.swing.JMenu menuDatos;
    private javax.swing.JMenu menuPacientes;
    private javax.swing.JRadioButton rdClinica;
    private javax.swing.JRadioButton rdPaciente;
    private javax.swing.JTable tablaCitas;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
